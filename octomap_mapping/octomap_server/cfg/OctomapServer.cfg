#!/usr/bin/env python
PACKAGE = "octomap_server"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("compress_map", bool_t, 0, "Compresses the map losslessly", True)
gen.add("incremental_2D_projection", bool_t, 0, "Incremental 2D projection", False)
gen.add("filter_speckles", bool_t, 0, "Filter speckle nodes (with no neighbors)", False)
gen.add("max_depth", int_t, 0, "Maximum depth when traversing the octree to send out markers. 16: full depth / max. resolution", 16, 1, 16)
gen.add("pointcloud_min_z", double_t, 0, "Minimum height of points to consider for insertion", -100, -100, 100)
gen.add("pointcloud_max_z", double_t, 0, "Maximum height of points to consider for insertion", 100, -100, 100)
gen.add("occupancy_min_z", double_t, 0, "Minimum height of occupied cells to consider in the final map", -100, -100, 100)
gen.add("occupancy_max_z", double_t, 0, "Maximum height of occupied cells to consider in the final map", 100, -100, 100)
gen.add("sensor_model_max_range", double_t, 0, "Sensor maximum range", -1.0, -1.0, 100)
gen.add("sensor_model_min_range", double_t, 0, "Sensor minimum range", -1.0, -1.0, 100)
gen.add("sensor_model_hit", double_t, 0, "Probabilities for hits in the sensor model when dynamically building a map", 0.7, 0.5, 1.0)
gen.add("sensor_model_miss", double_t, 0, "Probabilities for misses in the sensor model when dynamically building a map", 0.4, 0.0, 0.5)
gen.add("sensor_model_min", double_t, 0, "Minimum probability for clamping when dynamically building a map", 0.12, 0.0, 1.0)
gen.add("sensor_model_max", double_t, 0, "Maximum probability for clamping when dynamically building a map", 0.97, 0.0, 1.0)
gen.add("filter_ground", bool_t, 0, "Filter ground plane", False)
gen.add("ground_filter_distance", double_t, 0, "Distance threshold to consider a point as ground", 0.04, 0.001, 1)
gen.add("ground_filter_angle", double_t, 0, "Angular threshold of the detected plane from the horizontal plane to be detected as ground ", 0.15, 0.001, 15)
gen.add("ground_filter_plane_distance", double_t, 0, "Distance threshold from z=0 for a plane to be detected as ground", 0.07, 0.001, 1)

exit(gen.generate(PACKAGE, "octomap_server_node", "OctomapServer"))


# max_depth:
# This parameter defines the maximum depth when traversing the octree to send out markers. A higher value allows OctoMap to use a finer resolution, potentially capturing more details in the environment. However, increasing the depth also increases memory usage.

# pointcloud_min_z and pointcloud_max_z:
# These parameters define the minimum and maximum height of points to consider for insertion into the octree. Adjusting these values can filter out points outside a specific height range.

# sensor_model_max_range and sensor_model_min_range:
# These parameters define the sensor's maximum and minimum range. Points beyond the maximum range or below the minimum range might be excluded from the point cloud.

# sensor_model_hit, sensor_model_miss, sensor_model_min, and sensor_model_max:
# These parameters define probabilities for hits, misses, and clamping in the sensor model when dynamically building the map. While not directly controlling point cloud density, they can influence how occupancy probabilities are assigned.

# filter_ground:
# This parameter controls whether to filter the ground plane. If set to True, points deemed to be part of the ground plane might be filtered out, potentially affecting point cloud density.

# ground_filter_distance, ground_filter_angle, and ground_filter_plane_distance:
# These parameters configure the ground filtering process. Filtering the ground plane can affect the number and distribution of points in the point cloud.

